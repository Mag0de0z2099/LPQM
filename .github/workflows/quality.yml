name: Quality

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  quality:
    runs-on: ubuntu-latest
    permissions:
      contents: write          # para el autocommit del formateo
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]

    env:
      PYTHONPATH: ${{ github.workspace }}   # para que pytest pueda importar 'sim'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dev tools
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install -r requirements-dev.txt

      # ---------- Autoformato ----------
      - name: Black (auto format)
        run: black .

      - name: isort (auto order)
        run: isort .

      # Guarda el formateo en main (opcional)
      - name: Commit formatted code
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(format): apply black + isort"
          branch: main

      # ---------- Chequeos (tolerantes por ahora) ----------
      - name: Flake8 (lint, tolerant)
        run: flake8 . || true

      - name: mypy (type check, tolerant)
        run: mypy . || true

           # ----------- Chequeos (tolerantes por ahora) -----------
      - name: Flake8 (lint, tolerant)
        run: flake8 . || true

      - name: mypy (type check, tolerant)
        run: mypy . || true

      - name: Pytest (tolerant)
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: pytest -q || true
