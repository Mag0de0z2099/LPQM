name: Deploy Release

on:
  # lo puedes lanzar manualmente desde Actions
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag (e.g., v0.1.0)'
        required: true
      prerelease:
        description: 'Mark as prerelease'
        type: boolean
        required: false
        default: true
  # o automáticamente cuando hagas push de un tag tipo v1.2.3
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write   # necesario para crear el Release

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Build package or bundle source
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

          # Si tienes pyproject.toml / setup.cfg / setup.py: construye wheel+sdist
          if [ -f pyproject.toml ] || [ -f setup.cfg ] || [ -f setup.py ]; then
            pip install build
            python -m build
          else
            # Si no, crea un zip del código fuente
            echo "No packaging config. Creating source zip…"
            git archive --format=zip --output=lpqm-source-${GITHUB_SHA::7}.zip HEAD
            mkdir -p dist
            mv lpqm-source-*.zip dist/
          fi

          ls -l dist

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-dist
          path: dist/*

      # Crear Release cuando lo lanzas manualmente
      - name: Create GitHub Release (manual dispatch)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ inputs.tag }}
          prerelease: ${{ inputs.prerelease }}
          artifacts: "dist/*"
          artifactErrorsFailBuild: true
          generateReleaseNotes: true

      # Crear Release cuando empujas un tag vX.Y.Z
      - name: Create GitHub Release (tag push)
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          prerelease: false
          artifacts: "dist/*"
          artifactErrorsFailBuild: true
          generateReleaseNotes: true
